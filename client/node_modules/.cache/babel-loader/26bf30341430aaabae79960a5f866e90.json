{"ast":null,"code":"var _jsxFileName = \"/Users/riva/Downloads/Cap_exper/client/src/Spotistuff/Songs.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useMemo } from 'react';\nimport '../Css/Songs.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Songs = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n\n  let curTracks; //console.log(\"SongsComponent\");\n\n  document.getElementsByClassName(\"SearchPlaylist\")[0].style.visibility = useMemo(() => \"visible\", [props.playlists.current.listOfPlaylistsFromAPI]);\n\n  const search = (rows, query) => {\n    return rows.filter(row => row.track.name.toLowerCase().indexOf(query.toLowerCase()) > -1);\n  };\n\n  function setColor(artist, name) {\n    if (props.tracks.selectedTrack.name === name && props.tracks.selectedTrack.artists[0].name === artist) {\n      return \"SongsButtonSelected\";\n    }\n\n    return \"SongsButton\";\n  }\n\n  const clickSong = e => {\n    if (!props.playing) props.setPlaying(true);\n\n    if (e.target.id === props.tracks.selectedTrack.id) {\n      axios(`https://api.spotify.com/v1/me/player/seek?position_ms=${0}`, {\n        method: \"PUT\",\n        headers: {\n          'Authorization': 'Bearer ' + props.logInfo\n        }\n      });\n    } else {\n      props.setTracks({\n        selectedTrack: search(props.dispPlaylist, props.query)[e.target.value].track,\n        listOfTracksFromApi: props.dispPlaylist\n      });\n      props.playlistTrack.current = props.playlists.current.selectedPlaylist;\n    }\n  };\n\n  const deleteSong = e => {\n    axios(`https://api.spotify.com/v1/playlists/${props.playlists.current.selectedPlaylist}/tracks`, {\n      method: \"DELETE\",\n      headers: {\n        'Authorization': 'Bearer ' + props.logInfo\n      },\n      data: {\n        \"tracks\": [{\n          \"uri\": e.currentTarget.value\n        }]\n      }\n    }).then(async _ => {\n      curTracks = await props.getPlaylist(0, curTracks, props.playlists.current.selectedPlaylist);\n      props.setDispPlaylist(curTracks);\n\n      if (props.playlistTrack.current === props.playlists.current.selectedPlaylist) {\n        props.setTracks({\n          selectedTrack: props.tracks.selectedTrack,\n          listOfTracksFromApi: curTracks\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SongsTable\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), search(props.dispPlaylist, props.query).length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"NotFound\",\n      children: [\"'\", props.query, \"' does not exist\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 62\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: search(props.dispPlaylist, props.query).map((item, idx) => item.track.available_markets.length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ButtonsParent\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: setColor(item.track.artists[0].name, item.track.name),\n              id: item.track.id,\n              onClick: clickSong,\n              value: idx,\n              children: [\" \", item.track.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"DelButton\",\n              onClick: deleteSong,\n              value: item.track.uri,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"DelMesage\",\n                children: \"\\xA0Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 16\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}, \"nwk+m61qLgjDVUp4IGV/072DDN4=\")), \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\n\n_c2 = Songs;\nexport default Songs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Songs$memo\");\n$RefreshReg$(_c2, \"Songs\");","map":{"version":3,"sources":["/Users/riva/Downloads/Cap_exper/client/src/Spotistuff/Songs.js"],"names":["React","memo","useMemo","axios","Songs","props","curTracks","document","getElementsByClassName","style","visibility","playlists","current","listOfPlaylistsFromAPI","search","rows","query","filter","row","track","name","toLowerCase","indexOf","setColor","artist","tracks","selectedTrack","artists","clickSong","e","playing","setPlaying","target","id","method","headers","logInfo","setTracks","dispPlaylist","value","listOfTracksFromApi","playlistTrack","selectedPlaylist","deleteSong","data","currentTarget","then","_","getPlaylist","setDispPlaylist","length","map","item","idx","available_markets","uri"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,IAAf,EAAqBC,OAArB,QAAmC,OAAnC;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,iCAAGH,IAAI,SAACI,KAAK,IAAE;AAAA;;AACxB,MAAIC,SAAJ,CADwB,CAExB;;AACAC,EAAAA,QAAQ,CAACC,sBAAT,CAAgC,gBAAhC,EAAkD,CAAlD,EAAqDC,KAArD,CAA2DC,UAA3D,GAAsER,OAAO,CAAC,MAAI,SAAL,EAAgB,CAACG,KAAK,CAACM,SAAN,CAAgBC,OAAhB,CAAwBC,sBAAzB,CAAhB,CAA7E;;AAEA,QAAMC,MAAM,GAAC,CAACC,IAAD,EAAOC,KAAP,KAAe;AAC1B,WAAOD,IAAI,CAACE,MAAL,CAAYC,GAAG,IAAEA,GAAG,CAACC,KAAJ,CAAUC,IAAV,CAAeC,WAAf,GAA6BC,OAA7B,CAAqCN,KAAK,CAACK,WAAN,EAArC,IAA4D,CAAC,CAA9E,CAAP;AACD,GAFD;;AAIA,WAASE,QAAT,CAAkBC,MAAlB,EAA0BJ,IAA1B,EAA+B;AAC7B,QAAGf,KAAK,CAACoB,MAAN,CAAaC,aAAb,CAA2BN,IAA3B,KAAkCA,IAAlC,IAA0Cf,KAAK,CAACoB,MAAN,CAAaC,aAAb,CAA2BC,OAA3B,CAAmC,CAAnC,EAAsCP,IAAtC,KAA6CI,MAA1F,EAAiG;AAC/F,aAAO,qBAAP;AACD;;AACD,WAAO,aAAP;AACD;;AAED,QAAMI,SAAS,GAAEC,CAAC,IAAG;AACnB,QAAG,CAACxB,KAAK,CAACyB,OAAV,EACEzB,KAAK,CAAC0B,UAAN,CAAiB,IAAjB;;AACF,QAAGF,CAAC,CAACG,MAAF,CAASC,EAAT,KAAc5B,KAAK,CAACoB,MAAN,CAAaC,aAAb,CAA2BO,EAA5C,EAA+C;AAC7C9B,MAAAA,KAAK,CAAE,yDAAwD,CAAE,EAA5D,EAA+D;AAClE+B,QAAAA,MAAM,EAAE,KAD0D;AAElEC,QAAAA,OAAO,EAAE;AAAC,2BAAkB,YAAY9B,KAAK,CAAC+B;AAArC;AAFyD,OAA/D,CAAL;AAID,KALD,MAMI;AACF/B,MAAAA,KAAK,CAACgC,SAAN,CAAgB;AAACX,QAAAA,aAAa,EAAEZ,MAAM,CAACT,KAAK,CAACiC,YAAP,EAAqBjC,KAAK,CAACW,KAA3B,CAAN,CAAwCa,CAAC,CAACG,MAAF,CAASO,KAAjD,EAAwDpB,KAAxE;AAA+EqB,QAAAA,mBAAmB,EAAEnC,KAAK,CAACiC;AAA1G,OAAhB;AACAjC,MAAAA,KAAK,CAACoC,aAAN,CAAoB7B,OAApB,GAA4BP,KAAK,CAACM,SAAN,CAAgBC,OAAhB,CAAwB8B,gBAApD;AACD;AACF,GAbD;;AAeA,QAAMC,UAAU,GAAEd,CAAC,IAAE;AACnB1B,IAAAA,KAAK,CAAE,wCAAuCE,KAAK,CAACM,SAAN,CAAgBC,OAAhB,CAAwB8B,gBAAiB,SAAlF,EAA4F;AAC/FR,MAAAA,MAAM,EAAE,QADuF;AAE/FC,MAAAA,OAAO,EAAE;AAAC,yBAAkB,YAAY9B,KAAK,CAAC+B;AAArC,OAFsF;AAG/FQ,MAAAA,IAAI,EAAE;AAAE,kBAAU,CAAC;AAAC,iBAAOf,CAAC,CAACgB,aAAF,CAAgBN;AAAxB,SAAD;AAAZ;AAHyF,KAA5F,CAAL,CAKCO,IALD,CAKO,MAAMC,CAAN,IAAW;AAChBzC,MAAAA,SAAS,GAAG,MAAMD,KAAK,CAAC2C,WAAN,CAAkB,CAAlB,EAAqB1C,SAArB,EAAgCD,KAAK,CAACM,SAAN,CAAgBC,OAAhB,CAAwB8B,gBAAxD,CAAlB;AACArC,MAAAA,KAAK,CAAC4C,eAAN,CAAsB3C,SAAtB;;AACA,UAAGD,KAAK,CAACoC,aAAN,CAAoB7B,OAApB,KAA8BP,KAAK,CAACM,SAAN,CAAgBC,OAAhB,CAAwB8B,gBAAzD,EAA0E;AACxErC,QAAAA,KAAK,CAACgC,SAAN,CAAgB;AAACX,UAAAA,aAAa,EAAErB,KAAK,CAACoB,MAAN,CAAaC,aAA7B;AAA4Cc,UAAAA,mBAAmB,EAAElC;AAAjE,SAAhB;AACD;AACF,KAXD;AAYD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGQ,MAAM,CAACT,KAAK,CAACiC,YAAP,EAAqBjC,KAAK,CAACW,KAA3B,CAAN,CAAwCkC,MAAxC,KAAiD,CAAjD,iBAAsD;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,sBAA2B7C,KAAK,CAACW,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFzD,eAGE;AAAA,6BACE;AAAA,kBACGF,MAAM,CAACT,KAAK,CAACiC,YAAP,EAAqBjC,KAAK,CAACW,KAA3B,CAAN,CAAwCmC,GAAxC,CAA4C,CAACC,IAAD,EAAOC,GAAP,KAAiBD,IAAI,CAACjC,KAAL,CAAWmC,iBAAX,CAA6BJ,MAA7B,GAAoC,CAApC,iBAC5D;AAAA,iCACG;AAAI,YAAA,SAAS,EAAC,eAAd;AAAA,oCAA8B;AAAQ,cAAA,SAAS,EAAE3B,QAAQ,CAAC6B,IAAI,CAACjC,KAAL,CAAWQ,OAAX,CAAmB,CAAnB,EAAsBP,IAAvB,EAA6BgC,IAAI,CAACjC,KAAL,CAAWC,IAAxC,CAA3B;AAA0E,cAAA,EAAE,EAAEgC,IAAI,CAACjC,KAAL,CAAWc,EAAzF;AAA6F,cAAA,OAAO,EAAEL,SAAtG;AAAiH,cAAA,KAAK,EAAEyB,GAAxH;AAAA,8BAA+HD,IAAI,CAACjC,KAAL,CAAWC,IAA1I;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA9B,eACC;AAAQ,cAAA,SAAS,EAAC,WAAlB;AAA8B,cAAA,OAAO,EAAEuB,UAAvC;AAAmD,cAAA,KAAK,EAAES,IAAI,CAACjC,KAAL,CAAWoC,GAArE;AAAA,sCACE;AAAG,gBAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBADF,eACiC;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADjC;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,WAASF,GAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjEiB,kCAAP,iCAAX;;MAAMjD,K;AAmEN,eAAeA,KAAf","sourcesContent":["import React, {memo, useMemo} from 'react';\r\nimport '../Css/Songs.css';\r\nimport axios from 'axios';\r\n\r\nconst Songs = memo(props=>{\r\n  let curTracks;\r\n  //console.log(\"SongsComponent\");\r\n  document.getElementsByClassName(\"SearchPlaylist\")[0].style.visibility=useMemo(()=>\"visible\", [props.playlists.current.listOfPlaylistsFromAPI]);\r\n\r\n  const search=(rows, query)=>{\r\n    return rows.filter(row=>row.track.name.toLowerCase().indexOf(query.toLowerCase()) > -1)\r\n  };\r\n\r\n  function setColor(artist, name){\r\n    if(props.tracks.selectedTrack.name===name && props.tracks.selectedTrack.artists[0].name===artist){\r\n      return \"SongsButtonSelected\";\r\n    }\r\n    return \"SongsButton\";\r\n  }\r\n\r\n  const clickSong= e=> {\r\n    if(!props.playing)\r\n      props.setPlaying(true);\r\n    if(e.target.id===props.tracks.selectedTrack.id){\r\n      axios(`https://api.spotify.com/v1/me/player/seek?position_ms=${0}`, {\r\n        method: \"PUT\",\r\n        headers: {'Authorization' : 'Bearer ' + props.logInfo}\r\n      })\r\n    }\r\n    else{\r\n      props.setTracks({selectedTrack: search(props.dispPlaylist, props.query)[e.target.value].track, listOfTracksFromApi: props.dispPlaylist});\r\n      props.playlistTrack.current=props.playlists.current.selectedPlaylist;\r\n    }\r\n  };\r\n\r\n  const deleteSong= e=>{\r\n    axios(`https://api.spotify.com/v1/playlists/${props.playlists.current.selectedPlaylist}/tracks`, {\r\n      method: \"DELETE\",\r\n      headers: {'Authorization' : 'Bearer ' + props.logInfo},\r\n      data: { \"tracks\": [{\"uri\": e.currentTarget.value}]}\r\n    })\r\n    .then (async _ => {\r\n      curTracks = await props.getPlaylist(0, curTracks, props.playlists.current.selectedPlaylist);\r\n      props.setDispPlaylist(curTracks);\r\n      if(props.playlistTrack.current===props.playlists.current.selectedPlaylist){\r\n        props.setTracks({selectedTrack: props.tracks.selectedTrack, listOfTracksFromApi: curTracks});\r\n      }\r\n    });\r\n  }\r\n\r\n  return(\r\n    <div className=\"SongsTable\">\r\n      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"/ >\r\n      {search(props.dispPlaylist, props.query).length===0 && <li className=\"NotFound\">'{props.query}' does not exist</li>}\r\n      <table>\r\n        <tbody>\r\n          {search(props.dispPlaylist, props.query).map((item, idx) => ( item.track.available_markets.length>0 &&\r\n            <tr key={idx}>\r\n              {<td className=\"ButtonsParent\"><button className={setColor(item.track.artists[0].name, item.track.name)} id={item.track.id} onClick={clickSong} value={idx}> {item.track.name}</button>\r\n                <button className=\"DelButton\" onClick={deleteSong} value={item.track.uri}>\r\n                  <i className=\"fa fa-trash\"></i><div className=\"DelMesage\" >&nbsp;Delete</div></button>\r\n              </td>}\r\n            </tr>\r\n        )) }\r\n        </tbody>\r\n\r\n      </table>\r\n    </div>\r\n  );\r\n})\r\n\r\nexport default Songs;\r\n"]},"metadata":{},"sourceType":"module"}