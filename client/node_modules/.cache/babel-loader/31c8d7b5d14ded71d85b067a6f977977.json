{"ast":null,"code":"import { parse } from 'content-type';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar checkIsString = /*#__PURE__*/getRefinement(function (value) {\n  return typeof value === 'string' ? value : null;\n});\n\nvar isDefined = function isDefined(x) {\n  return x !== null && x !== undefined;\n};\n\nfunction getRefinement(getB) {\n  return function (a) {\n    return isDefined(getB(a));\n  };\n}\n\nvar checkIsNonEmptyArray = function checkIsNonEmptyArray(a) {\n  return a.length > 0;\n};\n/** Takes a dictionary containing nullish values and returns a dictionary of all the defined\r\n * (non-nullish) values.\r\n */\n\n\nvar compactDefined = function compactDefined(obj) {\n  return Object.keys(obj).reduce(function (acc, key) {\n    var _ref;\n\n    var value = obj[key];\n    return _extends({}, acc, isDefined(value) ? (_ref = {}, _ref[key] = value, _ref) : {});\n  }, {});\n};\n\nfunction flow() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  var len = fns.length - 1;\n  return function () {\n    for (var _len2 = arguments.length, x = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      x[_key2] = arguments[_key2];\n    }\n\n    var y = fns[0].apply(this, x);\n\n    for (var i = 1; i <= len; i++) {\n      y = fns[i].call(this, y);\n    }\n\n    return y;\n  };\n}\n\nvar checkIsObject = /*#__PURE__*/getRefinement(function (response) {\n  return isDefined(response) && typeof response === 'object' && !Array.isArray(response) ? response : null;\n});\nvar checkIsErrors = /*#__PURE__*/getRefinement(function (errors) {\n  return Array.isArray(errors) && errors.every(checkIsString) && checkIsNonEmptyArray(errors) ? errors : null;\n});\nvar checkIsApiError = /*#__PURE__*/getRefinement(function (response) {\n  return checkIsObject(response) && 'errors' in response && checkIsErrors(response.errors) ? {\n    errors: response.errors\n  } : null;\n});\n\nvar getErrorForBadStatusCode = function getErrorForBadStatusCode(jsonResponse) {\n  if (checkIsApiError(jsonResponse)) {\n    return {\n      errors: jsonResponse.errors,\n      source: 'api'\n    };\n  } else {\n    return {\n      errors: ['Responded with a status code outside the 2xx range, and the response body is not recognisable.'],\n      source: 'decoding'\n    };\n  }\n};\n\nvar DecodingError = function DecodingError(message) {\n  this.message = message;\n};\n\nvar CONTENT_TYPE_RESPONSE_HEADER = 'content-type';\nvar CONTENT_TYPE_JSON = 'application/json';\n\nvar checkIsJsonResponse = function checkIsJsonResponse(response) {\n  var contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);\n  return isDefined(contentTypeHeader) && parse(contentTypeHeader).type === CONTENT_TYPE_JSON;\n};\n/**\r\n * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.\r\n */\n\n\nvar getJsonResponse = function getJsonResponse(response) {\n  if (checkIsJsonResponse(response)) {\n    return response.json()[\"catch\"](function (_err) {\n      throw new DecodingError('unable to parse JSON response.');\n    });\n  } else {\n    throw new DecodingError('expected JSON response from server.');\n  }\n};\n\nvar handleFetchResponse = function handleFetchResponse(handleResponse) {\n  return function (response) {\n    return (response.ok ? handleResponse({\n      response: response\n    }).then(function (handledResponse) {\n      return {\n        type: 'success',\n        status: response.status,\n        response: handledResponse,\n        originalResponse: response\n      };\n    }) : getJsonResponse(response).then(function (jsonResponse) {\n      return _extends({\n        type: 'error',\n        status: response.status\n      }, getErrorForBadStatusCode(jsonResponse), {\n        originalResponse: response\n      });\n    }))[\"catch\"](function (error) {\n      /**\r\n       * We want to separate expected decoding errors from unknown ones. We do so by throwing a custom\r\n       * `DecodingError` whenever we encounter one within `handleFetchResponse` and catch them all\r\n       * here. This allows us to easily handle all of these errors at once. Unexpected errors are not\r\n       * caught, so that they bubble up and fail loudly.\r\n       *\r\n       * Note: Ideally we'd use an Either type, but this does the job without introducing dependencies\r\n       * like `fp-ts`.\r\n       */\n      if (error instanceof DecodingError) {\n        return {\n          type: 'error',\n          source: 'decoding',\n          status: response.status,\n          originalResponse: response,\n          errors: [error.message]\n        };\n      } else {\n        throw error;\n      }\n    });\n  };\n};\n\nvar castResponse = function castResponse() {\n  return function (_ref) {\n    var response = _ref.response;\n    return getJsonResponse(response);\n  };\n};\n\nvar addQueryToUrl = function addQueryToUrl(query) {\n  return function (url) {\n    Object.keys(query).forEach(function (queryKey) {\n      return url.searchParams.set(queryKey, query[queryKey].toString());\n    });\n  };\n};\n\nvar addPathnameToUrl = function addPathnameToUrl(pathname) {\n  return function (url) {\n    // When there is no existing pathname, the value is `/`. Appending would give us a URL with two\n    // forward slashes. This is why we replace the value in that scenario.\n    if (url.pathname === '/') {\n      url.pathname = pathname;\n    } else {\n      url.pathname += pathname;\n    }\n  };\n};\n\nvar buildUrl = function buildUrl(_ref) {\n  var pathname = _ref.pathname,\n      query = _ref.query;\n  return function (apiUrl) {\n    var url = new URL(apiUrl);\n    addPathnameToUrl(pathname)(url);\n    addQueryToUrl(query)(url);\n    return url.toString();\n  };\n};\n\nvar getQueryFromSearchParams = function getQueryFromSearchParams(searchParams) {\n  var query = {};\n  searchParams.forEach(function (value, key) {\n    query[key] = value;\n  });\n  return query;\n};\n\nvar parseQueryAndPathname = function parseQueryAndPathname(url) {\n  var _URL = new URL(url),\n      pathname = _URL.pathname,\n      searchParams = _URL.searchParams;\n\n  var query = getQueryFromSearchParams(searchParams);\n  return {\n    query: query,\n    pathname: pathname === '/' ? undefined : pathname\n  };\n};\n/**\r\n * helper used to type-check the arguments, and add default params for all requests\r\n */\n\n\nvar createRequestHandler = function createRequestHandler(fn) {\n  return function (a, additionalFetchOptions) {\n    if (additionalFetchOptions === void 0) {\n      additionalFetchOptions = {};\n    }\n\n    var _fn = fn(a),\n        headers = _fn.headers,\n        query = _fn.query,\n        baseReqParams = _objectWithoutPropertiesLoose(_fn, [\"headers\", \"query\"]);\n\n    return _extends({}, baseReqParams, additionalFetchOptions, {\n      query: query,\n      headers: _extends({}, headers, additionalFetchOptions.headers)\n    });\n  };\n};\n\nvar makeEndpoint = function makeEndpoint(endpoint) {\n  return endpoint;\n};\n\nvar initMakeRequest = function initMakeRequest(_ref) {\n  var accessKey = _ref.accessKey,\n      _ref$apiVersion = _ref.apiVersion,\n      apiVersion = _ref$apiVersion === void 0 ? 'v1' : _ref$apiVersion,\n      _ref$apiUrl = _ref.apiUrl,\n      apiUrl = _ref$apiUrl === void 0 ? 'https://api.unsplash.com' : _ref$apiUrl,\n      generalHeaders = _ref.headers,\n      providedFetch = _ref.fetch,\n      generalFetchOptions = _objectWithoutPropertiesLoose(_ref, [\"accessKey\", \"apiVersion\", \"apiUrl\", \"headers\", \"fetch\"]);\n\n  return function (_ref2) {\n    var handleResponse = _ref2.handleResponse,\n        handleRequest = _ref2.handleRequest;\n    return flow(handleRequest, function (_ref3) {\n      var pathname = _ref3.pathname,\n          query = _ref3.query,\n          _ref3$method = _ref3.method,\n          method = _ref3$method === void 0 ? 'GET' : _ref3$method,\n          endpointHeaders = _ref3.headers,\n          body = _ref3.body,\n          signal = _ref3.signal;\n      var url = buildUrl({\n        pathname: pathname,\n        query: query\n      })(apiUrl);\n\n      var fetchOptions = _extends({\n        method: method,\n        headers: _extends({}, generalHeaders, endpointHeaders, {\n          'Accept-Version': apiVersion\n        }, isDefined(accessKey) ? {\n          Authorization: \"Client-ID \" + accessKey\n        } : {}),\n        body: body,\n        signal: signal\n      }, generalFetchOptions);\n\n      var fetchToUse = providedFetch != null ? providedFetch : fetch;\n      return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));\n    });\n  };\n};\n\nvar TOTAL_RESPONSE_HEADER = 'x-total';\n\nvar getTotalFromApiFeedResponse = function getTotalFromApiFeedResponse(response) {\n  var totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);\n\n  if (isDefined(totalsStr)) {\n    var total = parseInt(totalsStr);\n\n    if (Number.isInteger(total)) {\n      return total;\n    } else {\n      throw new DecodingError(\"expected \" + TOTAL_RESPONSE_HEADER + \" header to be valid integer.\");\n    }\n  } else {\n    throw new DecodingError(\"expected \" + TOTAL_RESPONSE_HEADER + \" header to exist.\");\n  }\n};\n\nvar handleFeedResponse = function handleFeedResponse() {\n  return function (_ref) {\n    var response = _ref.response;\n    return castResponse()({\n      response: response\n    }).then(function (results) {\n      return {\n        results: results,\n        total: getTotalFromApiFeedResponse(response)\n      };\n    });\n  };\n};\n\nvar getCollections = function getCollections(collectionIds) {\n  return isDefined(collectionIds) ? {\n    collections: collectionIds.join()\n  } : {};\n};\n\nvar getTopics = function getTopics(topicIds) {\n  return isDefined(topicIds) ? {\n    topics: topicIds.join()\n  } : {};\n};\n\nvar getFeedParams = function getFeedParams(_ref) {\n  var page = _ref.page,\n      perPage = _ref.perPage,\n      orderBy = _ref.orderBy;\n  return compactDefined({\n    per_page: perPage,\n    order_by: orderBy,\n    page: page\n  });\n};\n\nvar COLLECTIONS_PATH_PREFIX = '/collections';\n\nvar getPhotos = /*#__PURE__*/function () {\n  var getPathname = function getPathname(_ref) {\n    var collectionId = _ref.collectionId;\n    return COLLECTIONS_PATH_PREFIX + \"/\" + collectionId + \"/photos\";\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_ref2) {\n      var collectionId = _ref2.collectionId,\n          orientation = _ref2.orientation,\n          paginationParams = _objectWithoutPropertiesLoose(_ref2, [\"collectionId\", \"orientation\"]);\n\n      return {\n        pathname: getPathname({\n          collectionId: collectionId\n        }),\n        query: compactDefined(_extends({}, getFeedParams(paginationParams), {\n          orientation: orientation\n        }))\n      };\n    }),\n    handleResponse: handleFeedResponse()\n  });\n}();\n\nvar get = /*#__PURE__*/function () {\n  var getPathname = function getPathname(_ref3) {\n    var collectionId = _ref3.collectionId;\n    return COLLECTIONS_PATH_PREFIX + \"/\" + collectionId;\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_ref4) {\n      var collectionId = _ref4.collectionId;\n      return {\n        pathname: getPathname({\n          collectionId: collectionId\n        }),\n        query: {}\n      };\n    }),\n    handleResponse: castResponse()\n  });\n}();\n\nvar list = /*#__PURE__*/function () {\n  var getPathname = function getPathname() {\n    return COLLECTIONS_PATH_PREFIX;\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (paginationParams) {\n      if (paginationParams === void 0) {\n        paginationParams = {};\n      }\n\n      return {\n        pathname: getPathname(),\n        query: getFeedParams(paginationParams)\n      };\n    }),\n    handleResponse: handleFeedResponse()\n  });\n}();\n\nvar getRelated = /*#__PURE__*/function () {\n  var getPathname = function getPathname(_ref5) {\n    var collectionId = _ref5.collectionId;\n    return COLLECTIONS_PATH_PREFIX + \"/\" + collectionId + \"/related\";\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_ref6) {\n      var collectionId = _ref6.collectionId;\n      return {\n        pathname: getPathname({\n          collectionId: collectionId\n        }),\n        query: {}\n      };\n    }),\n    handleResponse: castResponse()\n  });\n}();\n\nvar index = {\n  __proto__: null,\n  getPhotos: getPhotos,\n  get: get,\n  list: list,\n  getRelated: getRelated\n};\nvar PHOTOS_PATH_PREFIX = '/photos';\n\nvar list$1 = /*#__PURE__*/function () {\n  var _getPathname = function getPathname() {\n    return PHOTOS_PATH_PREFIX;\n  };\n\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: function getPathname(_params) {\n      return _getPathname();\n    },\n    handleRequest: createRequestHandler(function (feedParams) {\n      if (feedParams === void 0) {\n        feedParams = {};\n      }\n\n      return {\n        pathname: PHOTOS_PATH_PREFIX,\n        query: compactDefined(getFeedParams(feedParams))\n      };\n    }),\n    handleResponse: handleFeedResponse()\n  });\n}();\n\nvar get$1 = /*#__PURE__*/function () {\n  var getPathname = function getPathname(_ref) {\n    var photoId = _ref.photoId;\n    return PHOTOS_PATH_PREFIX + \"/\" + photoId;\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_ref2) {\n      var photoId = _ref2.photoId;\n      return {\n        pathname: getPathname({\n          photoId: photoId\n        }),\n        query: {}\n      };\n    }),\n    handleResponse: castResponse()\n  });\n}();\n\nvar getStats = /*#__PURE__*/function () {\n  var getPathname = function getPathname(_ref3) {\n    var photoId = _ref3.photoId;\n    return PHOTOS_PATH_PREFIX + \"/\" + photoId + \"/statistics\";\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_ref4) {\n      var photoId = _ref4.photoId;\n      return {\n        pathname: getPathname({\n          photoId: photoId\n        }),\n        query: {}\n      };\n    }),\n    handleResponse: castResponse()\n  });\n}();\n\nvar getRandom = /*#__PURE__*/function () {\n  var getPathname = function getPathname() {\n    return PHOTOS_PATH_PREFIX + \"/random\";\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_temp) {\n      var _ref5 = _temp === void 0 ? {} : _temp,\n          collectionIds = _ref5.collectionIds,\n          contentFilter = _ref5.contentFilter,\n          topicIds = _ref5.topicIds,\n          queryParams = _objectWithoutPropertiesLoose(_ref5, [\"collectionIds\", \"contentFilter\", \"topicIds\"]);\n\n      return {\n        pathname: getPathname(),\n        query: compactDefined(_extends({}, queryParams, {\n          content_filter: contentFilter\n        }, getCollections(collectionIds), getTopics(topicIds))),\n        headers: {\n          /**\r\n           * Avoid response caching\r\n           */\n          'cache-control': 'no-cache'\n        }\n      };\n    }),\n    handleResponse: castResponse()\n  });\n}();\n\nvar trackDownload = {\n  handleRequest: /*#__PURE__*/createRequestHandler(function (_ref6) {\n    var downloadLocation = _ref6.downloadLocation;\n\n    var _parseQueryAndPathnam = parseQueryAndPathname(downloadLocation),\n        pathname = _parseQueryAndPathnam.pathname,\n        query = _parseQueryAndPathnam.query;\n\n    if (!isDefined(pathname)) {\n      throw new Error('Could not parse pathname from url.');\n    }\n\n    return {\n      pathname: pathname,\n      query: compactDefined(query)\n    };\n  }),\n  handleResponse: /*#__PURE__*/castResponse()\n};\nvar index$1 = {\n  __proto__: null,\n  list: list$1,\n  get: get$1,\n  getStats: getStats,\n  getRandom: getRandom,\n  trackDownload: trackDownload\n};\nvar SEARCH_PATH_PREFIX = \"/search\";\n\nvar getPhotos$1 = /*#__PURE__*/function () {\n  var _getPathname = function getPathname() {\n    return SEARCH_PATH_PREFIX + \"/photos\";\n  };\n\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: function getPathname(_params) {\n      return _getPathname();\n    },\n    handleRequest: createRequestHandler(function (_ref) {\n      var query = _ref.query,\n          page = _ref.page,\n          perPage = _ref.perPage,\n          orderBy = _ref.orderBy,\n          collectionIds = _ref.collectionIds,\n          lang = _ref.lang,\n          contentFilter = _ref.contentFilter,\n          filters = _objectWithoutPropertiesLoose(_ref, [\"query\", \"page\", \"perPage\", \"orderBy\", \"collectionIds\", \"lang\", \"contentFilter\"]);\n\n      return {\n        pathname: _getPathname(),\n        query: compactDefined(_extends({\n          query: query,\n          content_filter: contentFilter,\n          lang: lang,\n          order_by: orderBy\n        }, getFeedParams({\n          page: page,\n          perPage: perPage\n        }), getCollections(collectionIds), filters))\n      };\n    }),\n    handleResponse: castResponse()\n  });\n}();\n\nvar getCollections$1 = /*#__PURE__*/function () {\n  var _getPathname2 = function getPathname() {\n    return SEARCH_PATH_PREFIX + \"/collections\";\n  };\n\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: function getPathname(_params) {\n      return _getPathname2();\n    },\n    handleRequest: createRequestHandler(function (_ref2) {\n      var query = _ref2.query,\n          paginationParams = _objectWithoutPropertiesLoose(_ref2, [\"query\"]);\n\n      return {\n        pathname: _getPathname2(),\n        query: _extends({\n          query: query\n        }, getFeedParams(paginationParams))\n      };\n    }),\n    handleResponse: castResponse()\n  });\n}();\n\nvar getUsers = /*#__PURE__*/function () {\n  var _getPathname3 = function getPathname() {\n    return SEARCH_PATH_PREFIX + \"/users\";\n  };\n\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: function getPathname(_params) {\n      return _getPathname3();\n    },\n    handleRequest: createRequestHandler(function (_ref3) {\n      var query = _ref3.query,\n          paginationParams = _objectWithoutPropertiesLoose(_ref3, [\"query\"]);\n\n      return {\n        pathname: _getPathname3(),\n        query: _extends({\n          query: query\n        }, getFeedParams(paginationParams))\n      };\n    }),\n    handleResponse: castResponse()\n  });\n}();\n\nvar index$2 = {\n  __proto__: null,\n  getPhotos: getPhotos$1,\n  getCollections: getCollections$1,\n  getUsers: getUsers\n};\nvar USERS_PATH_PREFIX = '/users';\n\nvar get$2 = /*#__PURE__*/function () {\n  var getPathname = function getPathname(_ref) {\n    var username = _ref.username;\n    return USERS_PATH_PREFIX + \"/\" + username;\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_ref2) {\n      var username = _ref2.username;\n      return {\n        pathname: getPathname({\n          username: username\n        }),\n        query: {}\n      };\n    }),\n    handleResponse: castResponse()\n  });\n}();\n\nvar getPhotos$2 = /*#__PURE__*/function () {\n  var getPathname = function getPathname(_ref3) {\n    var username = _ref3.username;\n    return USERS_PATH_PREFIX + \"/\" + username + \"/photos\";\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_ref4) {\n      var username = _ref4.username,\n          stats = _ref4.stats,\n          orientation = _ref4.orientation,\n          paginationParams = _objectWithoutPropertiesLoose(_ref4, [\"username\", \"stats\", \"orientation\"]);\n\n      return {\n        pathname: getPathname({\n          username: username\n        }),\n        query: compactDefined(_extends({}, getFeedParams(paginationParams), {\n          orientation: orientation,\n          stats: stats\n        }))\n      };\n    }),\n    handleResponse: handleFeedResponse()\n  });\n}();\n\nvar getLikes = /*#__PURE__*/function () {\n  var getPathname = function getPathname(_ref5) {\n    var username = _ref5.username;\n    return USERS_PATH_PREFIX + \"/\" + username + \"/likes\";\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_ref6) {\n      var username = _ref6.username,\n          orientation = _ref6.orientation,\n          paginationParams = _objectWithoutPropertiesLoose(_ref6, [\"username\", \"orientation\"]);\n\n      return {\n        pathname: getPathname({\n          username: username\n        }),\n        query: compactDefined(_extends({}, getFeedParams(paginationParams), {\n          orientation: orientation\n        }))\n      };\n    }),\n    handleResponse: handleFeedResponse()\n  });\n}();\n\nvar getCollections$2 = /*#__PURE__*/function () {\n  var getPathname = function getPathname(_ref7) {\n    var username = _ref7.username;\n    return USERS_PATH_PREFIX + \"/\" + username + \"/collections\";\n  };\n\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: createRequestHandler(function (_ref8) {\n      var username = _ref8.username,\n          paginationParams = _objectWithoutPropertiesLoose(_ref8, [\"username\"]);\n\n      return {\n        pathname: getPathname({\n          username: username\n        }),\n        query: getFeedParams(paginationParams)\n      };\n    }),\n    handleResponse: handleFeedResponse()\n  });\n}();\n\nvar index$3 = {\n  __proto__: null,\n  get: get$2,\n  getPhotos: getPhotos$2,\n  getLikes: getLikes,\n  getCollections: getCollections$2\n};\nvar BASE_TOPIC_PATH = '/topics';\n\nvar getTopicPath = function getTopicPath(_ref) {\n  var topicIdOrSlug = _ref.topicIdOrSlug;\n  return BASE_TOPIC_PATH + \"/\" + topicIdOrSlug;\n};\n\nvar list$2 = /*#__PURE__*/makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: function handleRequest(_ref2) {\n    var page = _ref2.page,\n        perPage = _ref2.perPage,\n        orderBy = _ref2.orderBy,\n        topicIdsOrSlugs = _ref2.topicIdsOrSlugs;\n    return {\n      pathname: BASE_TOPIC_PATH,\n      query: compactDefined(_extends({}, getFeedParams({\n        page: page,\n        perPage: perPage\n      }), {\n        ids: topicIdsOrSlugs == null ? void 0 : topicIdsOrSlugs.join(','),\n        order_by: orderBy\n      }))\n    };\n  },\n  handleResponse: /*#__PURE__*/handleFeedResponse()\n});\nvar get$3 = /*#__PURE__*/makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: function handleRequest(_ref3) {\n    var topicIdOrSlug = _ref3.topicIdOrSlug;\n    return {\n      pathname: getTopicPath({\n        topicIdOrSlug: topicIdOrSlug\n      }),\n      query: {}\n    };\n  },\n  handleResponse: /*#__PURE__*/castResponse()\n});\n\nvar getPhotos$3 = /*#__PURE__*/function () {\n  var getPathname = /*#__PURE__*/flow(getTopicPath, function (topicPath) {\n    return topicPath + \"/photos\";\n  });\n  return makeEndpoint({\n    getPathname: getPathname,\n    handleRequest: function handleRequest(_ref4) {\n      var topicIdOrSlug = _ref4.topicIdOrSlug,\n          orientation = _ref4.orientation,\n          feedParams = _objectWithoutPropertiesLoose(_ref4, [\"topicIdOrSlug\", \"orientation\"]);\n\n      return {\n        pathname: getPathname({\n          topicIdOrSlug: topicIdOrSlug\n        }),\n        query: compactDefined(_extends({}, getFeedParams(feedParams), {\n          orientation: orientation\n        }))\n      };\n    },\n    handleResponse: handleFeedResponse()\n  });\n}();\n\nvar index$4 = {\n  __proto__: null,\n  list: list$2,\n  get: get$3,\n  getPhotos: getPhotos$3\n};\n\nvar trackNonHotLinkedPhotoView = function trackNonHotLinkedPhotoView(_ref) {\n  var appId = _ref.appId;\n  return function (_ref2) {\n    var photoId = _ref2.photoId;\n    var ids = !Array.isArray(photoId) ? [photoId] : photoId;\n\n    if (ids.length > 20) {\n      throw new Error('You cannot track more than 20 photos at once. Please try again with fewer photos.');\n    }\n\n    return fetch(\"views.unsplash.com/v?photo_id=\" + ids.join() + \"&app_id=\" + appId);\n  };\n};\n\nvar internals = {\n  __proto__: null,\n  collections: index,\n  photos: index$1,\n  search: index$2,\n  users: index$3,\n  topics: index$4,\n  trackNonHotLinkedPhotoView: trackNonHotLinkedPhotoView\n};\nvar Language;\n\n(function (Language) {\n  Language[\"Afrikaans\"] = \"af\";\n  Language[\"Amharic\"] = \"am\";\n  Language[\"Arabic\"] = \"ar\";\n  Language[\"Azerbaijani\"] = \"az\";\n  Language[\"Belarusian\"] = \"be\";\n  Language[\"Bulgarian\"] = \"bg\";\n  Language[\"Bengali\"] = \"bn\";\n  Language[\"Bosnian\"] = \"bs\";\n  Language[\"Catalan\"] = \"ca\";\n  Language[\"Cebuano\"] = \"ceb\";\n  Language[\"Corsican\"] = \"co\";\n  Language[\"Czech\"] = \"cs\";\n  Language[\"Welsh\"] = \"cy\";\n  Language[\"Danish\"] = \"da\";\n  Language[\"German\"] = \"de\";\n  Language[\"Greek\"] = \"el\";\n  Language[\"English\"] = \"en\";\n  Language[\"Esperanto\"] = \"eo\";\n  Language[\"Spanish\"] = \"es\";\n  Language[\"Estonian\"] = \"et\";\n  Language[\"Basque\"] = \"eu\";\n  Language[\"Persian\"] = \"fa\";\n  Language[\"Finnish\"] = \"fi\";\n  Language[\"French\"] = \"fr\";\n  Language[\"Frisian\"] = \"fy\";\n  Language[\"Irish\"] = \"ga\";\n  Language[\"ScotsGaelic\"] = \"gd\";\n  Language[\"Galician\"] = \"gl\";\n  Language[\"Gujarati\"] = \"gu\";\n  Language[\"Hausa\"] = \"ha\";\n  Language[\"Hawaiian\"] = \"haw\";\n  Language[\"Hindi\"] = \"hi\";\n  Language[\"Hmong\"] = \"hmn\";\n  Language[\"Croatian\"] = \"hr\";\n  Language[\"HaitianCreole\"] = \"ht\";\n  Language[\"Hungarian\"] = \"hu\";\n  Language[\"Armenian\"] = \"hy\";\n  Language[\"Indonesian\"] = \"id\";\n  Language[\"Igbo\"] = \"ig\";\n  Language[\"Icelandic\"] = \"is\";\n  Language[\"Italian\"] = \"it\";\n  Language[\"Hebrew\"] = \"iw\";\n  Language[\"Japanese\"] = \"ja\";\n  Language[\"Javanese\"] = \"jw\";\n  Language[\"Georgian\"] = \"ka\";\n  Language[\"Kazakh\"] = \"kk\";\n  Language[\"Khmer\"] = \"km\";\n  Language[\"Kannada\"] = \"kn\";\n  Language[\"Korean\"] = \"ko\";\n  Language[\"Kurdish\"] = \"ku\";\n  Language[\"Kyrgyz\"] = \"ky\";\n  Language[\"Latin\"] = \"la\";\n  Language[\"Luxembourgish\"] = \"lb\";\n  Language[\"Lao\"] = \"lo\";\n  Language[\"Lithuanian\"] = \"lt\";\n  Language[\"Latvian\"] = \"lv\";\n  Language[\"Malagasy\"] = \"mg\";\n  Language[\"Maori\"] = \"mi\";\n  Language[\"Macedonian\"] = \"mk\";\n  Language[\"Malayalam\"] = \"ml\";\n  Language[\"Mongolian\"] = \"mn\";\n  Language[\"Marathi\"] = \"mr\";\n  Language[\"Malay\"] = \"ms\";\n  Language[\"Maltese\"] = \"mt\";\n  Language[\"Myanmar\"] = \"my\";\n  Language[\"Nepali\"] = \"ne\";\n  Language[\"Dutch\"] = \"nl\";\n  Language[\"Norwegian\"] = \"no\";\n  Language[\"Nyanja\"] = \"ny\";\n  Language[\"Oriya\"] = \"or\";\n  Language[\"Punjabi\"] = \"pa\";\n  Language[\"Polish\"] = \"pl\";\n  Language[\"Pashto\"] = \"ps\";\n  Language[\"Portuguese\"] = \"pt\";\n  Language[\"Romanian\"] = \"ro\";\n  Language[\"Russian\"] = \"ru\";\n  Language[\"Kinyarwanda\"] = \"rw\";\n  Language[\"Sindhi\"] = \"sd\";\n  Language[\"Sinhala\"] = \"si\";\n  Language[\"Slovak\"] = \"sk\";\n  Language[\"Slovenian\"] = \"sl\";\n  Language[\"Samoan\"] = \"sm\";\n  Language[\"Shona\"] = \"sn\";\n  Language[\"Somali\"] = \"so\";\n  Language[\"Albanian\"] = \"sq\";\n  Language[\"Serbian\"] = \"sr\";\n  Language[\"Sesotho\"] = \"st\";\n  Language[\"Sundanese\"] = \"su\";\n  Language[\"Swedish\"] = \"sv\";\n  Language[\"Swahili\"] = \"sw\";\n  Language[\"Tamil\"] = \"ta\";\n  Language[\"Telugu\"] = \"te\";\n  Language[\"Tajik\"] = \"tg\";\n  Language[\"Thai\"] = \"th\";\n  Language[\"Turkmen\"] = \"tk\";\n  Language[\"Filipino\"] = \"tl\";\n  Language[\"Turkish\"] = \"tr\";\n  Language[\"Tatar\"] = \"tt\";\n  Language[\"Uighur\"] = \"ug\";\n  Language[\"Ukrainian\"] = \"uk\";\n  Language[\"Urdu\"] = \"ur\";\n  Language[\"Uzbek\"] = \"uz\";\n  Language[\"Vietnamese\"] = \"vi\";\n  Language[\"Xhosa\"] = \"xh\";\n  Language[\"Yiddish\"] = \"yi\";\n  Language[\"Yoruba\"] = \"yo\";\n  Language[\"ChineseSimplified\"] = \"zh\";\n  Language[\"ChineseTraditional\"] = \"zh-TW\";\n  Language[\"Zulu\"] = \"zu\";\n})(Language || (Language = {}));\n\nvar OrderBy;\n\n(function (OrderBy) {\n  OrderBy[\"LATEST\"] = \"latest\";\n  OrderBy[\"POPULAR\"] = \"popular\";\n  OrderBy[\"VIEWS\"] = \"views\";\n  OrderBy[\"DOWNLOADS\"] = \"downloads\";\n  OrderBy[\"OLDEST\"] = \"oldest\";\n})(OrderBy || (OrderBy = {}));\n\nvar createApi = /*#__PURE__*/flow(initMakeRequest, function (makeRequest) {\n  return {\n    photos: {\n      get: makeRequest(get$1),\n      list: makeRequest(list$1),\n      getStats: makeRequest(getStats),\n      getRandom: makeRequest(getRandom),\n      trackDownload: makeRequest(trackDownload)\n    },\n    users: {\n      getPhotos: makeRequest(getPhotos$2),\n      getCollections: makeRequest(getCollections$2),\n      getLikes: makeRequest(getLikes),\n      get: makeRequest(get$2)\n    },\n    search: {\n      getCollections: makeRequest(getCollections$1),\n      getPhotos: makeRequest(getPhotos$1),\n      getUsers: makeRequest(getUsers)\n    },\n    collections: {\n      getPhotos: makeRequest(getPhotos),\n      get: makeRequest(get),\n      list: makeRequest(list),\n      getRelated: makeRequest(getRelated)\n    },\n    topics: {\n      list: makeRequest(list$2),\n      get: makeRequest(get$3),\n      getPhotos: makeRequest(getPhotos$3)\n    }\n  };\n});\nexport { Language, OrderBy, internals as _internals, createApi };","map":{"version":3,"mappings":"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","names":["checkIsString","getRefinement","value","isDefined","x","undefined","getB","a","checkIsNonEmptyArray","length","compactDefined","obj","Object","keys","reduce","acc","key","flow","fns","len","y","apply","i","call","checkIsObject","response","Array","isArray","checkIsErrors","errors","every","checkIsApiError","getErrorForBadStatusCode","jsonResponse","source","DecodingError","message","CONTENT_TYPE_RESPONSE_HEADER","CONTENT_TYPE_JSON","checkIsJsonResponse","contentTypeHeader","headers","get","ContentTypeHelpers","type","getJsonResponse","json","handleFetchResponse","handleResponse","ok","then","handledResponse","status","originalResponse","error","castResponse","addQueryToUrl","query","url","forEach","searchParams","set","queryKey","toString","addPathnameToUrl","pathname","buildUrl","apiUrl","URL","getQueryFromSearchParams","parseQueryAndPathname","createRequestHandler","fn","additionalFetchOptions","baseReqParams","makeEndpoint","endpoint","initMakeRequest","accessKey","apiVersion","generalHeaders","providedFetch","fetch","generalFetchOptions","handleRequest","method","_ref3$method","endpointHeaders","body","signal","fetchOptions","Authorization","fetchToUse","TOTAL_RESPONSE_HEADER","getTotalFromApiFeedResponse","totalsStr","total","parseInt","Number","isInteger","handleFeedResponse","results","getCollections","collectionIds","collections","join","getTopics","topicIds","topics","getFeedParams","page","perPage","orderBy","per_page","order_by","COLLECTIONS_PATH_PREFIX","getPhotos","getPathname","collectionId","orientation","paginationParams","Query","list","getRelated","PHOTOS_PATH_PREFIX","_params","feedParams","photoId","getStats","getRandom","contentFilter","queryParams","content_filter","trackDownload","downloadLocation","Error","SEARCH_PATH_PREFIX","lang","filters","getUsers","USERS_PATH_PREFIX","username","stats","getLikes","BASE_TOPIC_PATH","getTopicPath","topicIdOrSlug","topicIdsOrSlugs","ids","topicPath","trackNonHotLinkedPhotoView","appId","Language","OrderBy","createApi","photos","makeRequest","users","search"],"sources":["/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/helpers/typescript.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/helpers/fp.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/helpers/errors.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/helpers/json.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/helpers/response.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/helpers/url.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/helpers/request.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/helpers/feed.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/helpers/query.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/methods/collections/index.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/methods/photos/index.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/methods/search/index.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/methods/users/index.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/methods/topics/index.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/beacon.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/methods/search/types/request.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/types/request.ts","/Users/riva/Downloads/Cap_exper/client/node_modules/unsplash-js/src/index.ts"],"sourcesContent":["// Copied from https://github.com/Microsoft/TypeScript/issues/1897#issuecomment-338650717\nexport type AnyJson = boolean | number | string | null | JsonArray | JsonMap;\nexport type JsonMap = { [key: string]: AnyJson };\nexport type JsonArray = Array<AnyJson>;\n\nexport const checkIsString = getRefinement(\n  (value: unknown): Nullable<string> => (typeof value === 'string' ? value : null),\n);\n\n/**\n * https://github.com/Microsoft/TypeScript/issues/12215#issuecomment-377567046\n */\nexport type OmitStrict<T, K extends keyof T> = Omit<T, K>;\n\n/**\n * Unlike TypeScript's `NonNullable`, this does _not_ include `undefined`\n */\nexport type Nullable<T> = T | null;\n\nexport const isDefined = <T>(x: T | null | undefined): x is T => x !== null && x !== undefined;\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\ntype Refinement<A, B extends A> = (a: A) => a is B;\nexport function getRefinement<A, B extends A>(getB: (a: A) => Nullable<B>): Refinement<A, B> {\n  return (a: A): a is B => isDefined(getB(a));\n}\n\nexport const checkIsNonEmptyArray = <T>(a: T[]): a is NonEmptyArray<T> => a.length > 0;\n","import { isDefined } from './typescript';\n\n/** Takes a dictionary containing nullish values and returns a dictionary of all the defined\n * (non-nullish) values.\n */\nexport const compactDefined = <A>(obj: Record<string, A | null | undefined>) =>\n  Object.keys(obj).reduce<Record<string, A>>((acc, key) => {\n    const value = obj[key];\n    return {\n      ...acc,\n      ...(isDefined(value) ? { [key]: value } : {}),\n    };\n  }, {});\n\n/**\n * copied from `fp-ts`\n * https://github.com/gcanti/fp-ts/blob/70190b5a03ddc2d31b4708c75c6dfad81d0bfa21/perf/function/flow.t¡s\n */\nexport function flow<A extends Array<unknown>, B>(ab: (...a: A) => B): (...a: A) => B;\nexport function flow<A extends Array<unknown>, B, C>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n): (...a: A) => C;\nexport function flow<A extends Array<unknown>, B, C, D>(\n  ab: (...a: A) => B,\n  bc: (b: B) => C,\n  cd: (b: C) => D,\n): (...a: A) => D;\nexport function flow(...fns: Array<Function>): Function {\n  const len = fns.length - 1;\n  return function(this: any, ...x: Array<any>) {\n    let y = fns[0].apply(this, x);\n    for (let i = 1; i <= len; i++) {\n      y = fns[i].call(this, y);\n    }\n    return y;\n  };\n}\n","import {\n  AnyJson,\n  checkIsString,\n  getRefinement,\n  isDefined,\n  checkIsNonEmptyArray,\n  JsonMap,\n  NonEmptyArray,\n  Nullable,\n} from './typescript';\n\nexport type Errors = NonEmptyArray<string>;\nexport type ErrorSource = 'api' | 'decoding';\n\nconst checkIsObject = getRefinement(\n  (response: AnyJson): Nullable<JsonMap> =>\n    isDefined(response) && typeof response === 'object' && !Array.isArray(response)\n      ? response\n      : null,\n);\n\nconst checkIsErrors = getRefinement(\n  (errors: AnyJson): Nullable<Errors> =>\n    Array.isArray(errors) && errors.every(checkIsString) && checkIsNonEmptyArray(errors)\n      ? errors\n      : null,\n);\n\nconst checkIsApiError = getRefinement(\n  (response: AnyJson): Nullable<{ errors: Errors }> =>\n    checkIsObject(response) && 'errors' in response && checkIsErrors(response.errors)\n      ? { errors: response.errors }\n      : null,\n);\n\nexport const getErrorForBadStatusCode = (\n  jsonResponse: AnyJson,\n): { errors: Errors; source: ErrorSource } => {\n  if (checkIsApiError(jsonResponse)) {\n    return { errors: jsonResponse.errors, source: 'api' };\n  } else {\n    return {\n      errors: [\n        'Responded with a status code outside the 2xx range, and the response body is not recognisable.',\n      ],\n      source: 'decoding',\n    };\n  }\n};\n\nexport class DecodingError {\n  constructor(readonly message: string) {}\n}\n","import * as ContentTypeHelpers from 'content-type';\nimport { DecodingError } from './errors';\nimport { AnyJson, isDefined } from './typescript';\n\nconst CONTENT_TYPE_RESPONSE_HEADER = 'content-type';\nconst CONTENT_TYPE_JSON = 'application/json';\nconst checkIsJsonResponse = (response: Response) => {\n  const contentTypeHeader = response.headers.get(CONTENT_TYPE_RESPONSE_HEADER);\n\n  return (\n    isDefined(contentTypeHeader) &&\n    ContentTypeHelpers.parse(contentTypeHeader).type === CONTENT_TYPE_JSON\n  );\n};\n\n/**\n * Note: restrict the type of JSON to `AnyJson` so that `any` doesn't leak downstream.\n */\nexport const getJsonResponse = (response: Response): Promise<AnyJson> => {\n  if (checkIsJsonResponse(response)) {\n    return response.json().catch(_err => {\n      throw new DecodingError('unable to parse JSON response.');\n    });\n  } else {\n    throw new DecodingError('expected JSON response from server.');\n  }\n};\n","import { Errors, ErrorSource, getErrorForBadStatusCode, DecodingError } from './errors';\nimport { getJsonResponse } from './json';\n\nexport type ApiResponse<T> =\n  | {\n      type: 'success';\n      response: T;\n      originalResponse: Response;\n      errors?: never;\n      status: number;\n    }\n  | {\n      type: 'error';\n      source: ErrorSource;\n      response?: never;\n      originalResponse: Response;\n      errors: Errors;\n      status: number;\n    };\n\nexport type HandleResponse<T> = (args: { response: Response }) => Promise<T>;\n\nexport const handleFetchResponse = <ResponseType>(handleResponse: HandleResponse<ResponseType>) => (\n  response: Response,\n): Promise<ApiResponse<ResponseType>> =>\n  (response.ok\n    ? handleResponse({ response }).then(\n        (handledResponse): ApiResponse<ResponseType> => ({\n          type: 'success',\n          status: response.status,\n          response: handledResponse,\n          originalResponse: response,\n        }),\n      )\n    : getJsonResponse(response).then(\n        (jsonResponse): ApiResponse<ResponseType> => ({\n          type: 'error',\n          status: response.status,\n          ...getErrorForBadStatusCode(jsonResponse),\n          originalResponse: response,\n        }),\n      )\n  ).catch(error => {\n    /**\n     * We want to separate expected decoding errors from unknown ones. We do so by throwing a custom\n     * `DecodingError` whenever we encounter one within `handleFetchResponse` and catch them all\n     * here. This allows us to easily handle all of these errors at once. Unexpected errors are not\n     * caught, so that they bubble up and fail loudly.\n     *\n     * Note: Ideally we'd use an Either type, but this does the job without introducing dependencies\n     * like `fp-ts`.\n     */\n    if (error instanceof DecodingError) {\n      return {\n        type: 'error',\n        source: 'decoding',\n        status: response.status,\n        originalResponse: response,\n        errors: [error.message],\n      };\n    } else {\n      throw error;\n    }\n  });\n\nexport const castResponse = <T>(): HandleResponse<T> => ({ response }) =>\n  (getJsonResponse(response) as unknown) as Promise<T>;\n","type Query = {\n  [index: string]: string | number | boolean;\n};\n\nexport type BuildUrlParams = {\n  pathname: string;\n  query: Query;\n};\n\nconst addQueryToUrl = (query: Query) => (url: URL) => {\n  Object.keys(query).forEach(queryKey =>\n    url.searchParams.set(queryKey, query[queryKey].toString()),\n  );\n};\n\nconst addPathnameToUrl = (pathname: string) => (url: URL) => {\n  // When there is no existing pathname, the value is `/`. Appending would give us a URL with two\n  // forward slashes. This is why we replace the value in that scenario.\n  if (url.pathname === '/') {\n    url.pathname = pathname;\n  } else {\n    url.pathname += pathname;\n  }\n};\n\nexport const buildUrl = ({ pathname, query }: BuildUrlParams) => (apiUrl: string) => {\n  const url = new URL(apiUrl);\n  addPathnameToUrl(pathname)(url);\n  addQueryToUrl(query)(url);\n  return url.toString();\n};\n\nconst getQueryFromSearchParams = (searchParams: URLSearchParams) => {\n  const query: Query = {};\n\n  searchParams.forEach((value, key) => {\n    query[key] = value;\n  });\n  return query;\n};\n\nexport const parseQueryAndPathname = (url: string) => {\n  const { pathname, searchParams } = new URL(url);\n\n  const query: Query = getQueryFromSearchParams(searchParams);\n\n  return { query, pathname: pathname === '/' ? undefined : pathname };\n};\n","import { flow } from './fp';\nimport { ApiResponse, handleFetchResponse, HandleResponse } from './response';\nimport { isDefined, OmitStrict } from './typescript';\nimport { buildUrl, BuildUrlParams } from './url';\n\ntype FetchParams = Pick<RequestInit, 'method'>;\n/**\n * The params generated by the library\n */\ntype BaseRequestParams = BuildUrlParams &\n  FetchParams &\n  // `headers` is not part of FetchParams because we want to allow headers in the additional params as well\n  Pick<RequestInit, 'headers'>;\n\n/**\n * Additional fetch options provided by the user on a per-call basis\n */\nexport interface AdditionalFetchOptions extends OmitStrict<RequestInit, keyof FetchParams> {}\nexport type CompleteRequestParams = BaseRequestParams & AdditionalFetchOptions;\ntype HandleRequest<Args> = (\n  a: Args,\n  additionalFetchOptions?: AdditionalFetchOptions,\n) => CompleteRequestParams;\n\n/**\n * helper used to type-check the arguments, and add default params for all requests\n */\nexport const createRequestHandler = <Args>(\n  fn: (a: Args) => BaseRequestParams,\n): HandleRequest<Args> => (a, additionalFetchOptions = {}) => {\n  const { headers, query, ...baseReqParams } = fn(a);\n\n  return {\n    ...baseReqParams,\n    ...additionalFetchOptions,\n    query,\n    headers: {\n      ...headers,\n      ...additionalFetchOptions.headers,\n    },\n  };\n};\n\n/**\n * Initial parameters that apply to all calls\n */\nexport type InitParams = {\n  apiVersion?: string;\n  fetch?: typeof fetch;\n} & OmitStrict<RequestInit, 'method' | 'body'> &\n  ({ accessKey: string; apiUrl?: never } | { apiUrl: string; accessKey?: never });\n\ntype RequestGenerator<Args, ResponseType> = {\n  handleRequest: HandleRequest<Args>;\n  handleResponse: HandleResponse<ResponseType>;\n};\n\ntype Endpoint<PathnameParams, RequestArgs, ResponseType> = {\n  getPathname: (params: PathnameParams) => string;\n} & RequestGenerator<RequestArgs, ResponseType>;\nexport const makeEndpoint = <PathnameParams, RequestArgs, ResponseType>(\n  endpoint: Endpoint<PathnameParams, RequestArgs, ResponseType>,\n) => endpoint;\n\ntype GeneratedRequestFunction<Args, ResponseType> = (\n  ...a: Parameters<HandleRequest<Args>>\n) => Promise<ApiResponse<ResponseType>>;\n\ntype InitMakeRequest = (\n  args: InitParams,\n) => <Args, ResponseType>(\n  handlers: RequestGenerator<Args, ResponseType>,\n) => GeneratedRequestFunction<Args, ResponseType>;\n\nexport const initMakeRequest: InitMakeRequest = ({\n  accessKey,\n  apiVersion = 'v1',\n  apiUrl = 'https://api.unsplash.com',\n  headers: generalHeaders,\n  fetch: providedFetch,\n  ...generalFetchOptions\n}) => ({ handleResponse, handleRequest }) =>\n  flow(\n    handleRequest,\n    ({ pathname, query, method = 'GET', headers: endpointHeaders, body, signal }) => {\n      const url = buildUrl({ pathname, query })(apiUrl);\n\n      const fetchOptions: RequestInit = {\n        method,\n        headers: {\n          ...generalHeaders,\n          ...endpointHeaders,\n          'Accept-Version': apiVersion,\n          ...(isDefined(accessKey) ? { Authorization: `Client-ID ${accessKey}` } : {}),\n        },\n        body,\n        signal,\n        ...generalFetchOptions,\n      };\n\n      const fetchToUse = providedFetch ?? fetch;\n\n      return fetchToUse(url, fetchOptions).then(handleFetchResponse(handleResponse));\n    },\n  );\n","import { DecodingError } from './errors';\nimport { HandleResponse, castResponse } from './response';\nimport { isDefined } from './typescript';\n\nconst TOTAL_RESPONSE_HEADER = 'x-total';\nconst getTotalFromApiFeedResponse = (response: Response) => {\n  const totalsStr = response.headers.get(TOTAL_RESPONSE_HEADER);\n  if (isDefined(totalsStr)) {\n    const total = parseInt(totalsStr);\n    if (Number.isInteger(total)) {\n      return total;\n    } else {\n      throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to be valid integer.`);\n    }\n  } else {\n    throw new DecodingError(`expected ${TOTAL_RESPONSE_HEADER} header to exist.`);\n  }\n};\n\ntype FeedResponse<T> = {\n  results: T[];\n  total: number;\n};\n\nexport const handleFeedResponse = <T>(): HandleResponse<FeedResponse<T>> => ({ response }) =>\n  castResponse<T[]>()({ response }).then(results => ({\n    results,\n    total: getTotalFromApiFeedResponse(response),\n  }));\n","import { PaginationParams } from '../types/request';\nimport { compactDefined } from './fp';\nimport { isDefined } from './typescript';\n\nexport const getCollections = (collectionIds?: string[]) =>\n  isDefined(collectionIds) ? { collections: collectionIds.join() } : {};\n\nexport const getTopics = (topicIds?: string[]) =>\n  isDefined(topicIds) ? { topics: topicIds.join() } : {};\n\nexport const getFeedParams = ({ page, perPage, orderBy }: PaginationParams) =>\n  compactDefined({\n    per_page: perPage,\n    order_by: orderBy,\n    page,\n  });\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\n\ntype CollectionId = {\n  collectionId: string;\n};\n\nconst COLLECTIONS_PATH_PREFIX = '/collections';\n\nexport const getPhotos = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        collectionId,\n        orientation,\n        ...paginationParams\n      }: CollectionId & PaginationParams & OrientationParam) => ({\n        pathname: getPathname({ collectionId }),\n        query: compactDefined({ ...Query.getFeedParams(paginationParams), orientation }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n\nexport const list = (() => {\n  const getPathname = () => COLLECTIONS_PATH_PREFIX;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      (paginationParams: Pick<PaginationParams, 'page' | 'perPage'> = {}) => ({\n        pathname: getPathname(),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<any>(),\n  });\n})();\n\nexport const getRelated = (() => {\n  const getPathname = ({ collectionId }: CollectionId) =>\n    `${COLLECTIONS_PATH_PREFIX}/${collectionId}/related`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ collectionId }: CollectionId) => ({\n      pathname: getPathname({ collectionId }),\n      query: {},\n    })),\n    handleResponse: castResponse<any>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { isDefined } from '../../helpers/typescript';\nimport { parseQueryAndPathname } from '../../helpers/url';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from './types';\n\ntype PhotoId = {\n  photoId: string;\n};\n\nconst PHOTOS_PATH_PREFIX = '/photos';\n\nexport const list = (() => {\n  const getPathname = () => PHOTOS_PATH_PREFIX;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler((feedParams: PaginationParams = {}) => ({\n      pathname: PHOTOS_PATH_PREFIX,\n      query: compactDefined(Query.getFeedParams(feedParams)),\n    })),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const get = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Full>(),\n  });\n})();\n\nexport const getStats = (() => {\n  const getPathname = ({ photoId }: PhotoId) => `${PHOTOS_PATH_PREFIX}/${photoId}/statistics`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ photoId }: PhotoId) => ({\n      pathname: getPathname({ photoId }),\n      query: {},\n    })),\n    handleResponse: castResponse<Photo.Stats>(),\n  });\n})();\n\nexport type RandomParams = {\n  collectionIds?: string[];\n  topicIds?: string[];\n  featured?: boolean;\n  username?: string;\n  query?: string;\n  contentFilter?: 'low' | 'high';\n  count?: number;\n} & OrientationParam;\n\nexport const getRandom = (() => {\n  const getPathname = () => `${PHOTOS_PATH_PREFIX}/random`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ collectionIds, contentFilter, topicIds, ...queryParams }: RandomParams = {}) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          ...queryParams,\n          content_filter: contentFilter,\n          ...Query.getCollections(collectionIds),\n          ...Query.getTopics(topicIds),\n        }),\n        headers: {\n          /**\n           * Avoid response caching\n           */\n          'cache-control': 'no-cache',\n        },\n      }),\n    ),\n    handleResponse: castResponse<\n      // An array when the `count` query parameter is used.\n      Photo.Random | Photo.Random[]\n    >(),\n  });\n})();\n\nexport const trackDownload = {\n  handleRequest: createRequestHandler(({ downloadLocation }: { downloadLocation: string }) => {\n    const { pathname, query } = parseQueryAndPathname(downloadLocation);\n\n    if (!isDefined(pathname)) {\n      throw new Error('Could not parse pathname from url.');\n    }\n    return { pathname, query: compactDefined(query) };\n  }),\n  handleResponse: castResponse<{ url: string }>(),\n};\n","import { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport { ColorId, ContentFilter, Language, SearchOrderBy } from './types/request';\nimport * as SearchResponse from './types/response';\n\nexport type SearchParams = {\n  query: string;\n} & Pick<PaginationParams, 'page' | 'perPage'>;\n\nconst SEARCH_PATH_PREFIX = `/search`;\n\ntype SearchPhotosParams = SearchParams &\n  OrientationParam & {\n    /**\n     * API defaults to `\"relevant\"` if no value is provided\n     */\n    orderBy?: SearchOrderBy;\n    color?: ColorId;\n    /**\n     * API defaults to `en` (English) if no value is provided\n     */\n    lang?: Language;\n    /**\n     * API defaults to `\"low\"` if no value is provided\n     */\n    contentFilter?: ContentFilter;\n    collectionIds?: string[];\n  };\n\nexport const getPhotos = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/photos`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(\n      ({\n        query,\n        page,\n        perPage,\n        orderBy,\n        collectionIds,\n        lang,\n        contentFilter,\n        ...filters\n      }: SearchPhotosParams) => ({\n        pathname: getPathname(),\n        query: compactDefined({\n          query,\n          content_filter: contentFilter,\n          lang,\n          order_by: orderBy,\n          ...Query.getFeedParams({ page, perPage }),\n          ...Query.getCollections(collectionIds),\n          ...filters,\n        }),\n      }),\n    ),\n    handleResponse: castResponse<SearchResponse.Photos>(),\n  });\n})();\n\nexport const getCollections = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/collections`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Collections>(),\n  });\n})();\n\nexport const getUsers = (() => {\n  const getPathname = () => `${SEARCH_PATH_PREFIX}/users`;\n  return makeEndpoint({\n    // Wrapper uses type trick to allow 0 args\n    getPathname: (_params?: void) => getPathname(),\n    handleRequest: createRequestHandler(({ query, ...paginationParams }: SearchParams) => ({\n      pathname: getPathname(),\n      query: { query, ...Query.getFeedParams(paginationParams) },\n    })),\n    handleResponse: castResponse<SearchResponse.Users>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { createRequestHandler, makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as User from './types';\nimport * as Photo from '../photos/types';\nimport * as Collection from '../collections/types';\n\ntype Username = {\n  username: string;\n};\n\nconst USERS_PATH_PREFIX = '/users';\n\nexport const get = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(({ username }: Username) => ({\n      pathname: getPathname({ username }),\n      query: {},\n    })),\n    handleResponse: castResponse<User.Full>(),\n  });\n})();\n\nexport const getPhotos = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/photos`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        stats,\n        orientation,\n        ...paginationParams\n      }: {\n        stats?: boolean;\n      } & OrientationParam &\n        Username &\n        PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n          stats,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n\nexport const getLikes = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/likes`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({\n        username,\n        orientation,\n        ...paginationParams\n      }: OrientationParam & Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: compactDefined({\n          ...Query.getFeedParams(paginationParams),\n          orientation,\n        }),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\nexport const getCollections = (() => {\n  const getPathname = ({ username }: Username) => `${USERS_PATH_PREFIX}/${username}/collections`;\n  return makeEndpoint({\n    getPathname,\n    handleRequest: createRequestHandler(\n      ({ username, ...paginationParams }: Username & PaginationParams) => ({\n        pathname: getPathname({ username }),\n        query: Query.getFeedParams(paginationParams),\n      }),\n    ),\n    handleResponse: handleFeedResponse<Collection.Basic>(),\n  });\n})();\n","import { handleFeedResponse } from '../../helpers/feed';\nimport { compactDefined, flow } from '../../helpers/fp';\nimport * as Query from '../../helpers/query';\nimport { makeEndpoint } from '../../helpers/request';\nimport { castResponse } from '../../helpers/response';\nimport { OmitStrict } from '../../helpers/typescript';\nimport { OrientationParam, PaginationParams } from '../../types/request';\nimport * as Photo from '../photos/types';\nimport * as Topic from './types';\n\ntype TopicIdOrSlug = {\n  topicIdOrSlug: string;\n};\n\nconst BASE_TOPIC_PATH = '/topics';\nconst getTopicPath = ({ topicIdOrSlug }: TopicIdOrSlug) => `${BASE_TOPIC_PATH}/${topicIdOrSlug}`;\n\ntype TopicOrderBy = 'latest' | 'oldest' | 'position' | 'featured';\n\nexport const list = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({\n    page,\n    perPage,\n    orderBy,\n    topicIdsOrSlugs,\n  }: OmitStrict<PaginationParams, 'orderBy'> & {\n    /**\n     * default: `position`\n     */\n    orderBy?: TopicOrderBy;\n    topicIdsOrSlugs?: string[];\n  }) => ({\n    pathname: BASE_TOPIC_PATH,\n    query: compactDefined({\n      ...Query.getFeedParams({ page, perPage }),\n      ids: topicIdsOrSlugs?.join(','),\n      order_by: orderBy,\n    }),\n  }),\n  handleResponse: handleFeedResponse<Topic.Basic>(),\n});\n\nexport const get = makeEndpoint({\n  getPathname: getTopicPath,\n  handleRequest: ({ topicIdOrSlug }: TopicIdOrSlug) => ({\n    pathname: getTopicPath({ topicIdOrSlug }),\n    query: {},\n  }),\n  handleResponse: castResponse<Topic.Full>(),\n});\n\nexport const getPhotos = (() => {\n  const getPathname = flow(getTopicPath, topicPath => `${topicPath}/photos`);\n  return makeEndpoint({\n    getPathname,\n    handleRequest: ({\n      topicIdOrSlug,\n      orientation,\n      ...feedParams\n    }: TopicIdOrSlug & PaginationParams & OrientationParam) => ({\n      pathname: getPathname({ topicIdOrSlug }),\n      query: compactDefined({\n        ...Query.getFeedParams(feedParams),\n        orientation,\n      }),\n    }),\n    handleResponse: handleFeedResponse<Photo.Basic>(),\n  });\n})();\n","export const trackNonHotLinkedPhotoView = ({ appId }: { appId: string }) => ({\n  photoId,\n}: {\n  photoId: string | string[];\n}) => {\n  const ids = !Array.isArray(photoId) ? [photoId] : photoId;\n\n  if (ids.length > 20) {\n    throw new Error(\n      'You cannot track more than 20 photos at once. Please try again with fewer photos.',\n    );\n  }\n\n  return fetch(`views.unsplash.com/v?photo_id=${ids.join()}&app_id=${appId}`);\n};\n","export type SearchOrderBy = 'relevant' | 'latest';\n\nexport type ColorId =\n  | 'white'\n  | 'black'\n  | 'yellow'\n  | 'orange'\n  | 'red'\n  | 'purple'\n  | 'magenta'\n  | 'green'\n  | 'teal'\n  | 'blue'\n  | 'black_and_white';\n\nexport type ContentFilter = 'high' | 'low';\n\nexport enum Language {\n  Afrikaans = 'af',\n  Amharic = 'am',\n  Arabic = 'ar',\n  Azerbaijani = 'az',\n  Belarusian = 'be',\n  Bulgarian = 'bg',\n  Bengali = 'bn',\n  Bosnian = 'bs',\n  Catalan = 'ca',\n  Cebuano = 'ceb',\n  Corsican = 'co',\n  Czech = 'cs',\n  Welsh = 'cy',\n  Danish = 'da',\n  German = 'de',\n  Greek = 'el',\n  English = 'en',\n  Esperanto = 'eo',\n  Spanish = 'es',\n  Estonian = 'et',\n  Basque = 'eu',\n  Persian = 'fa',\n  Finnish = 'fi',\n  French = 'fr',\n  Frisian = 'fy',\n  Irish = 'ga',\n  ScotsGaelic = 'gd',\n  Galician = 'gl',\n  Gujarati = 'gu',\n  Hausa = 'ha',\n  Hawaiian = 'haw',\n  Hindi = 'hi',\n  Hmong = 'hmn',\n  Croatian = 'hr',\n  HaitianCreole = 'ht',\n  Hungarian = 'hu',\n  Armenian = 'hy',\n  Indonesian = 'id',\n  Igbo = 'ig',\n  Icelandic = 'is',\n  Italian = 'it',\n  Hebrew = 'iw',\n  Japanese = 'ja',\n  Javanese = 'jw',\n  Georgian = 'ka',\n  Kazakh = 'kk',\n  Khmer = 'km',\n  Kannada = 'kn',\n  Korean = 'ko',\n  Kurdish = 'ku',\n  Kyrgyz = 'ky',\n  Latin = 'la',\n  Luxembourgish = 'lb',\n  Lao = 'lo',\n  Lithuanian = 'lt',\n  Latvian = 'lv',\n  Malagasy = 'mg',\n  Maori = 'mi',\n  Macedonian = 'mk',\n  Malayalam = 'ml',\n  Mongolian = 'mn',\n  Marathi = 'mr',\n  Malay = 'ms',\n  Maltese = 'mt',\n  Myanmar = 'my',\n  Nepali = 'ne',\n  Dutch = 'nl',\n  Norwegian = 'no',\n  Nyanja = 'ny',\n  Oriya = 'or',\n  Punjabi = 'pa',\n  Polish = 'pl',\n  Pashto = 'ps',\n  Portuguese = 'pt',\n  Romanian = 'ro',\n  Russian = 'ru',\n  Kinyarwanda = 'rw',\n  Sindhi = 'sd',\n  Sinhala = 'si',\n  Slovak = 'sk',\n  Slovenian = 'sl',\n  Samoan = 'sm',\n  Shona = 'sn',\n  Somali = 'so',\n  Albanian = 'sq',\n  Serbian = 'sr',\n  Sesotho = 'st',\n  Sundanese = 'su',\n  Swedish = 'sv',\n  Swahili = 'sw',\n  Tamil = 'ta',\n  Telugu = 'te',\n  Tajik = 'tg',\n  Thai = 'th',\n  Turkmen = 'tk',\n  Filipino = 'tl',\n  Turkish = 'tr',\n  Tatar = 'tt',\n  Uighur = 'ug',\n  Ukrainian = 'uk',\n  Urdu = 'ur',\n  Uzbek = 'uz',\n  Vietnamese = 'vi',\n  Xhosa = 'xh',\n  Yiddish = 'yi',\n  Yoruba = 'yo',\n  ChineseSimplified = 'zh',\n  ChineseTraditional = 'zh-TW',\n  Zulu = 'zu',\n}\n","export enum OrderBy {\n  LATEST = 'latest',\n  POPULAR = 'popular',\n  VIEWS = 'views',\n  DOWNLOADS = 'downloads',\n  OLDEST = 'oldest',\n}\nexport type Orientation = 'landscape' | 'portrait' | 'squarish';\nexport type OrientationParam = {\n  orientation?: Orientation;\n};\n\nexport type PaginationParams = {\n  /**\n   * API defaults to `10` if no value is provided\n   */\n  perPage?: number;\n  /**\n   * API defaults to `1` if no value is provided\n   */\n  page?: number;\n  /**\n   * API defaults to `\"latest\"` if no value is provided\n   */\n  orderBy?: OrderBy;\n};\n","import { flow } from './helpers/fp';\nimport { initMakeRequest } from './helpers/request';\nimport * as collections from './methods/collections';\nimport * as photos from './methods/photos';\nimport * as search from './methods/search';\nimport * as users from './methods/users';\nimport * as topics from './methods/topics';\n\nimport * as _internals from './internals';\n\nexport const createApi = flow(initMakeRequest, makeRequest => ({\n  photos: {\n    get: makeRequest(photos.get),\n    list: makeRequest(photos.list),\n    getStats: makeRequest(photos.getStats),\n    getRandom: makeRequest(photos.getRandom),\n    trackDownload: makeRequest(photos.trackDownload),\n  },\n  users: {\n    getPhotos: makeRequest(users.getPhotos),\n    getCollections: makeRequest(users.getCollections),\n    getLikes: makeRequest(users.getLikes),\n    get: makeRequest(users.get),\n  },\n  search: {\n    getCollections: makeRequest(search.getCollections),\n    getPhotos: makeRequest(search.getPhotos),\n    getUsers: makeRequest(search.getUsers),\n  },\n  collections: {\n    getPhotos: makeRequest(collections.getPhotos),\n    get: makeRequest(collections.get),\n    list: makeRequest(collections.list),\n    getRelated: makeRequest(collections.getRelated),\n  },\n  topics: {\n    list: makeRequest(topics.list),\n    get: makeRequest(topics.get),\n    getPhotos: makeRequest(topics.getPhotos),\n  },\n}));\n\nexport { Language, ColorId, ContentFilter, SearchOrderBy } from './methods/search/types/request';\nexport { OrderBy, Orientation } from './types/request';\nexport { _internals };\n"]},"metadata":{},"sourceType":"module"}