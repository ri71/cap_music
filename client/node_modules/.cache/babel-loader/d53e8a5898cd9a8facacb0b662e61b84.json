{"ast":null,"code":"var _jsxFileName = \"/Users/riva/Downloads/Cap_exper/client/src/Spotistuff/Search.js\";\nimport React, { memo } from 'react';\nimport '../Css/Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = /*#__PURE__*/memo(_c = props => {\n  const loadQuery = e => {\n    if (e.target.placeholder === \"Search for a song...\") {\n      props.changeSearchRes(e.target.value);\n    } else {\n      props.setQuery(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.class,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: props.inputRef,\n      type: \"text\",\n      placeholder: props.placeh,\n      onChange: loadQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Search;\nexport default Search;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search$memo\");\n$RefreshReg$(_c2, \"Search\");","map":{"version":3,"sources":["/Users/riva/Downloads/Cap_exper/client/src/Spotistuff/Search.js"],"names":["React","memo","Search","props","loadQuery","e","target","placeholder","changeSearchRes","value","setQuery","class","inputRef","placeh"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,IAAf,QAA0B,OAA1B;AACA,OAAO,mBAAP;;AAEA,MAAMC,MAAM,gBAAGD,IAAI,MAACE,KAAK,IAAE;AACzB,QAAMC,SAAS,GAACC,CAAC,IAAE;AACjB,QAAGA,CAAC,CAACC,MAAF,CAASC,WAAT,KAAuB,sBAA1B,EAAiD;AAC/CJ,MAAAA,KAAK,CAACK,eAAN,CAAsBH,CAAC,CAACC,MAAF,CAASG,KAA/B;AACD,KAFD,MAGI;AACFN,MAAAA,KAAK,CAACO,QAAN,CAAeL,CAAC,CAACC,MAAF,CAASG,KAAxB;AACD;AACF,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAGN,KAAK,CAACQ,KAAvB;AAAA,2BACE;AAAO,MAAA,GAAG,EAAIR,KAAK,CAACS,QAApB;AAA8B,MAAA,IAAI,EAAC,MAAnC;AAA0C,MAAA,WAAW,EAAIT,KAAK,CAACU,MAA/D;AAAuE,MAAA,QAAQ,EAAET;AAAjF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAfkB,CAAnB;MAAMF,M;AAiBN,eAAeA,MAAf","sourcesContent":["import React, {memo} from 'react';\r\nimport '../Css/Search.css';\r\n\r\nconst Search = memo(props=>{\r\n  const loadQuery=e=>{\r\n    if(e.target.placeholder===\"Search for a song...\"){\r\n      props.changeSearchRes(e.target.value);\r\n    }\r\n    else{\r\n      props.setQuery(e.target.value);\r\n    }\r\n  };\r\n\r\n  return(\r\n    <div className= {props.class} >\r\n      <input ref = {props.inputRef} type=\"text\" placeholder = {props.placeh} onChange={loadQuery}></input>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}