{"ast":null,"code":"var _jsxFileName = \"/Users/riva/Downloads/Cap_exper/client/src/pages/User.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from \"react-dom\";\nimport ImageUploading from \"react-images-uploading\"; //import Script from 'react-load-script';\n//import SpotifyWeb from 'spotify-web-api-js';\n\nimport Playlists from './Spotistuff/Playlists';\nimport Songs from './Spotistuff/Songs';\nimport Details from './Spotistuff/Details';\nimport Search from './Spotistuff/Search';\nimport LoginS from './Spotistuff/Login';\nimport SearchAndSearchRes from './Spotistuff/SearchAndSearchRes';\nimport axios from 'axios';\nimport \"./User.css\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [images, setImages] = React.useState([]);\n  const maxNumber = 69;\n\n  const onChange = (imageList, addUpdateIndex) => {\n    _s();\n\n    // data for submit\n    console.log(imageList, addUpdateIndex);\n    setImages(imageList); //console.log(\"In App\");\n\n    const [logInfo, setLogInfo] = useState('');\n    const [cred, setCred] = useState();\n    const playlists = useRef({\n      selectedPlaylist: '',\n      listOfPlaylistsFromAPI: []\n    });\n    const [dispPlaylist, setDispPlaylist] = useState();\n    const [tracks, setTracks] = useState({\n      selectedTrack: '',\n      listOfTracksFromApi: ''\n    });\n    const [playing, setPlaying] = useState(true);\n    const [qPlaylist, setQPlaylist] = useState('');\n    const playlistTrack = useRef(); //const params = getHashParams();\n  };\n\n  _s(onChange, \"7kkUcT1p1zZJ7xsqRoddXk3Ai0E=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ImageUploading, {\n      multiple: true,\n      value: images,\n      onChange: onChange,\n      maxNumber: maxNumber,\n      dataURLKey: \"data_url\",\n      children: _ref => {\n        let {\n          imageList,\n          onImageUpload,\n          onImageRemoveAll,\n          onImageUpdate,\n          onImageRemove,\n          isDragging,\n          dragProps\n        } = _ref;\n        return (\n          /*#__PURE__*/\n          // write your building UI\n          _jsxDEV(\"div\", {\n            className: \"upload__image-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: isDragging ? {\n                color: \"red\"\n              } : null,\n              onClick: onImageUpload,\n              ...dragProps,\n              children: \"Click or Drop here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), \"\\xA0\", imageList.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: image.data_url,\n                alt: \"\",\n                width: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-item__btn-wrapper\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onImageUpdate(index),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => onImageRemove(index),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        );\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), !cred || cred === \"wrong\" ? /*#__PURE__*/_jsxDEV(LoginS, {\n      setLoggedIn: setLogInfo,\n      cred: cred,\n      setCred: setCred\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        class: \"SearchPlaylist\",\n        placeh: \"Search playlist\",\n        setQuery: setQPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(SearchAndSearchRes, {\n        logInfo: logInfo,\n        playlists: playlists,\n        getPlaylist: getPlaylist,\n        playlistTrack: playlistTrack,\n        setTracks: setTracks,\n        tracks: tracks,\n        setDispPlaylist: setDispPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Playlists, {\n        playlists: playlists,\n        setDispPlaylist: setDispPlaylist,\n        getPlaylist: getPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Box\",\n        children: [dispPlaylist && /*#__PURE__*/_jsxDEV(Songs, {\n          logInfo: logInfo,\n          playlists: playlists,\n          tracks: tracks,\n          setTracks: setTracks,\n          playlistTrack: playlistTrack,\n          dispPlaylist: dispPlaylist,\n          setDispPlaylist: setDispPlaylist,\n          query: qPlaylist,\n          getPlaylist: getPlaylist,\n          playing: playing,\n          setPlaying: setPlaying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 50\n        }, this), tracks.selectedTrack && /*#__PURE__*/_jsxDEV(Details, {\n          access_token: logInfo,\n          tracks: tracks,\n          setTracks: setTracks,\n          playlistTrack: playlistTrack,\n          playing: playing,\n          setPlaying: setPlaying\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"mOoWwfdsCKBG2MIVzAXM/MEStpE=\");\n\n_c = App;\nuseEffect(() => {\n  if (logInfo) {\n    //spotifyWebApi.setAccessToken(logInfo);\n    axios('https://api.spotify.com/v1/me/playlists', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + logInfo\n      }\n    }).then(response => {\n      playlists.current = {\n        listOfPlaylistsFromAPI: response.data.items\n      };\n      setCred(\"right\");\n    }).catch(_ => {\n      setCred(\"wrong\");\n    });\n  }\n}, [logInfo]); // function getHashParams() {\n//   var hashParams = {};\n//   var e, r = /([^&;=]+)=?([^&;]*)/g,\n//       q = window.location.hash.substring(1);\n//   while ( e = r.exec(q)) {\n//      hashParams[e[1]] = decodeURIComponent(e[2]);\n//   }\n//   return hashParams;\n// }\n\nconst getPlaylist = async (offset, curTracks, val) => {\n  await axios(`https://api.spotify.com/v1/playlists/${val}/tracks?offset=${offset}`, {\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + logInfo\n    }\n  }).then(response => {\n    if (curTracks) {\n      curTracks.push(...response.data.items);\n    } else {\n      curTracks = response.data.items;\n    }\n\n    if (response.data.items.length === 100) {\n      curTracks = getPlaylist(offset + 100, curTracks, val);\n    }\n  });\n  return curTracks;\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 138,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/riva/Downloads/Cap_exper/client/src/pages/User.js"],"names":["React","useState","useEffect","useRef","ReactDOM","ImageUploading","Playlists","Songs","Details","Search","LoginS","SearchAndSearchRes","axios","App","images","setImages","maxNumber","onChange","imageList","addUpdateIndex","console","log","logInfo","setLogInfo","cred","setCred","playlists","selectedPlaylist","listOfPlaylistsFromAPI","dispPlaylist","setDispPlaylist","tracks","setTracks","selectedTrack","listOfTracksFromApi","playing","setPlaying","qPlaylist","setQPlaylist","playlistTrack","onImageUpload","onImageRemoveAll","onImageUpdate","onImageRemove","isDragging","dragProps","color","map","image","index","data_url","getPlaylist","method","headers","then","response","current","data","items","catch","_","offset","curTracks","val","push","length","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport ImageUploading from \"react-images-uploading\";\r\n//import Script from 'react-load-script';\r\n//import SpotifyWeb from 'spotify-web-api-js';\r\nimport Playlists from './Spotistuff/Playlists';\r\nimport Songs from './Spotistuff/Songs';\r\nimport Details from './Spotistuff/Details';\r\nimport Search from './Spotistuff/Search';\r\nimport LoginS from './Spotistuff/Login';\r\nimport SearchAndSearchRes from './Spotistuff/SearchAndSearchRes';\r\n\r\nimport axios from 'axios';\r\nimport \"./User.css\";\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [images, setImages] = React.useState([]);\r\n  const maxNumber = 69;\r\n  const onChange = (imageList, addUpdateIndex) => {\r\n    // data for submit\r\n    console.log(imageList, addUpdateIndex);\r\n    setImages(imageList);\r\n  //console.log(\"In App\");\r\n  const [logInfo, setLogInfo]=useState('');\r\n  const [cred, setCred]=useState();\r\n  const playlists = useRef({selectedPlaylist:'', listOfPlaylistsFromAPI: []});\r\n  const [dispPlaylist, setDispPlaylist] = useState();\r\n  const [tracks, setTracks] = useState({selectedTrack:'', listOfTracksFromApi: ''});\r\n  const [playing, setPlaying]=useState(true);\r\n  const [qPlaylist, setQPlaylist] = useState('');\r\n  const playlistTrack=useRef();\r\n  //const params = getHashParams();\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <ImageUploading\r\n        multiple\r\n        value={images}\r\n        onChange={onChange}\r\n        maxNumber={maxNumber}\r\n        dataURLKey=\"data_url\"\r\n      >\r\n        {({\r\n          imageList,\r\n          onImageUpload,\r\n          onImageRemoveAll,\r\n          onImageUpdate,\r\n          onImageRemove,\r\n          isDragging,\r\n          dragProps\r\n        }) => (\r\n          // write your building UI\r\n          <div className=\"upload__image-wrapper\">\r\n            <button\r\n              style={isDragging ? { color: \"red\" } : null}\r\n              onClick={onImageUpload}\r\n              {...dragProps}\r\n            >\r\n              Click or Drop here\r\n            </button>\r\n            &nbsp;\r\n            {imageList.map((image, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={image.data_url} alt=\"\" width=\"100\" />\r\n                <div className=\"image-item__btn-wrapper\">\r\n                  <button onClick={() => onImageUpdate(index)}>Update</button>\r\n                  <button onClick={() => onImageRemove(index)}>Remove</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </ImageUploading>\r\n      {(!cred || cred === \"wrong\") ? <LoginS setLoggedIn={setLogInfo} cred={cred} setCred={setCred} /> :\r\n                    <>\r\n\r\n                          <Search class=\"SearchPlaylist\" placeh=\"Search playlist\" setQuery={setQPlaylist} />\r\n                          <SearchAndSearchRes logInfo={logInfo} playlists={playlists} getPlaylist={getPlaylist} playlistTrack={playlistTrack} setTracks={setTracks} tracks={tracks} setDispPlaylist={setDispPlaylist} />\r\n                          <Playlists playlists={playlists} setDispPlaylist={setDispPlaylist} getPlaylist={getPlaylist} />\r\n                          <div className=\"Box\">\r\n                                {dispPlaylist && <Songs logInfo={logInfo} playlists={playlists} tracks={tracks} setTracks={setTracks} playlistTrack={playlistTrack} dispPlaylist={dispPlaylist} setDispPlaylist={setDispPlaylist} query={qPlaylist} getPlaylist={getPlaylist} playing={playing} setPlaying={setPlaying} />}\r\n                                {tracks.selectedTrack && <Details access_token={logInfo} tracks={tracks} setTracks={setTracks} playlistTrack={playlistTrack} playing={playing} setPlaying={setPlaying} />}\r\n\r\n                          </div>\r\n                    </>}\r\n    </div>\r\n  );\r\n}\r\n\r\n  useEffect(()=> {\r\n    if (logInfo){\r\n      //spotifyWebApi.setAccessToken(logInfo);\r\n      axios('https://api.spotify.com/v1/me/playlists', {\r\n          method: 'GET',\r\n          headers: {'Authorization' : 'Bearer ' + logInfo}\r\n        })\r\n        .then((response) => {\r\n          playlists.current={listOfPlaylistsFromAPI: response.data.items};\r\n          setCred(\"right\");\r\n        })\r\n        .catch(_=>{\r\n            setCred(\"wrong\");\r\n          })\r\n    }\r\n  }, [logInfo]);\r\n\r\n  // function getHashParams() {\r\n  //   var hashParams = {};\r\n  //   var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n  //       q = window.location.hash.substring(1);\r\n  //   while ( e = r.exec(q)) {\r\n  //      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n  //   }\r\n  //   return hashParams;\r\n  // }\r\n  const getPlaylist= async (offset, curTracks, val)=>{\r\n    await axios(`https://api.spotify.com/v1/playlists/${val}/tracks?offset=${offset}`, {\r\n      method: 'GET',\r\n      headers: {'Authorization' : 'Bearer ' + logInfo}\r\n    })\r\n    .then (response => {\r\n      if(curTracks){\r\n        curTracks.push(...response.data.items);\r\n      }\r\n      else{\r\n        curTracks=response.data.items;\r\n      }\r\n      if(response.data.items.length===100){\r\n        curTracks= getPlaylist(offset+100, curTracks, val);\r\n      }\r\n    })\r\n    return curTracks;\r\n  };\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}